@{
    if (!Check.CheckLogin())
    {
        Response.Write("未登录!");
        Response.End();
    }

    string html = Request["html"];
    string name = Request["name"];
    string att = Request["att"];
    string id = Request["id"];
    
    Guid gid;
    if(!id.IsGuid(out gid) || name.IsNullOrEmpty() || att.IsNullOrEmpty() || html.IsNullOrEmpty())
    {
        Response.Write("参数错误!");
        Response.End();
    }
    Business.Platform.WorkFlowForm WFF = new Business.Platform.WorkFlowForm();

    Data.Model.WorkFlowForm wff = WFF.Get(gid);
    if(wff==null)
    {
        Response.Write("未找到表单!");
        Response.End();
    }

    string fileName = id + ".cshtml";
    
    System.Text.StringBuilder serverScript = new System.Text.StringBuilder("@{\r\n");
    var attrJSON = LitJson.JsonMapper.ToObject(att);
    serverScript.Append("\tstring FlowID = Request.QueryString[\"flowid\"];\r\n");
    serverScript.Append("\tstring StepID = Request.QueryString[\"stepid\"];\r\n");
    serverScript.Append("\tstring GroupID = Request.QueryString[\"groupid\"];\r\n");
    serverScript.Append("\tstring TaskID = Request.QueryString[\"taskid\"];\r\n");
    serverScript.Append("\tstring InstanceID = Request.QueryString[\"instanceid\"];\r\n");
    serverScript.Append("\tstring DisplayModel = Request.QueryString[\"display\"] ?? \"0\";\r\n");
    serverScript.AppendFormat("\tstring DBConnID = \"{0}\";\r\n", attrJSON["dbconn"].ToString());
    serverScript.AppendFormat("\tstring DBTable = \"{0}\";\r\n", attrJSON["dbtable"].ToString());
    serverScript.AppendFormat("\tstring DBTablePK = \"{0}\";\r\n", attrJSON["dbtablepk"].ToString());
    serverScript.AppendFormat("\tstring DBTableTitle = \"{0}\";\r\n", attrJSON["dbtabletitle"].ToString());

    serverScript.Append("\tBusiness.Platform.Dictionary BDictionary = new Business.Platform.Dictionary();\r\n");
    serverScript.Append("\tBusiness.Platform.WorkFlow BWorkFlow = new Business.Platform.WorkFlow();\r\n");
    serverScript.Append("\tBusiness.Platform.WorkFlowTask BWorkFlowTask = new Business.Platform.WorkFlowTask();\r\n");
    serverScript.Append("\tLitJson.JsonData initData = BWorkFlow.GetFormData(DBConnID, DBTable, DBTablePK, InstanceID);\r\n");
    serverScript.Append("\tstring TaskTitle = BWorkFlow.GetFromFieldData(initData, DBTable, DBTableTitle);\r\n");

    serverScript.Append("}\r\n");
    serverScript.Append("<link href=\"~/Platform/WorkFlow/FormDesigner/Forms/Public/flowform.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
    serverScript.Append("<script src=\"~/Platform/WorkFlow/FormDesigner/Forms/Public/common.js\" type=\"text/javascript\" ></script>\r\n");
    
    if (((System.Collections.IDictionary)attrJSON).Contains("hasEditor") && "1" == attrJSON["hasEditor"].ToString())
    {
        serverScript.Append("<script src=\"~/Scripts/ueditor/ueditor.config.js\" type=\"text/javascript\" ></script>\r\n");
        serverScript.Append("<script src=\"~/Scripts/ueditor/ueditor.all.min.js\" type=\"text/javascript\" ></script>\r\n");
        serverScript.Append("<script src=\"~/Scripts/ueditor/lang/zh-cn/zh-cn.js\" type=\"text/javascript\" ></script>\r\n");
        serverScript.Append("<script src=\"~/Scripts/ueditor/ueditor-patch-149.js\" type=\"text/javascript\" ></script>\r\n");
        serverScript.Append("<input type=\"hidden\" id=\"Form_HasUEditor\" name=\"Form_HasUEditor\" value=\"1\" />\r\n");
    }
    string validatePropType = attrJSON.ContainsKey("validatealerttype") ? attrJSON["validatealerttype"].ToString() : "2";
    serverScript.Append("<input type=\"hidden\" id=\"Form_ValidateAlertType\" name=\"Form_ValidateAlertType\" value=\"" + validatePropType + "\" />\r\n");
    if (attrJSON.ContainsKey("autotitle") && attrJSON["autotitle"].ToString().ToLower() == "true")
    {
        serverScript.AppendFormat("<input type=\"hidden\" id=\"{0}\" name=\"{0}\" value=\"{1}\" />\r\n", 
            string.Concat(attrJSON["dbtable"].ToString(), ".", attrJSON["dbtabletitle"].ToString()),
            "@(TaskTitle.IsNullOrEmpty() ? BWorkFlow.GetAutoTaskTitle(FlowID, StepID, Request.QueryString[\"groupid\"]) : TaskTitle)"
            );
    }
    serverScript.AppendFormat("<input type=\"hidden\" id=\"Form_TitleField\" name=\"Form_TitleField\" value=\"{0}\" />\r\n", string.Concat(attrJSON["dbtable"].ToString(), ".", attrJSON["dbtabletitle"].ToString()));
    //serverScript.AppendFormat("<input type=\"hidden\" id=\"Form_Name\" name=\"Form_Name\" value=\"{0}\" />\r\n", attrJSON["name"].ToString());
    serverScript.AppendFormat("<input type=\"hidden\" id=\"Form_DBConnID\" name=\"Form_DBConnID\" value=\"{0}\" />\r\n", attrJSON["dbconn"].ToString());
    serverScript.AppendFormat("<input type=\"hidden\" id=\"Form_DBTable\" name=\"Form_DBTable\" value=\"{0}\" />\r\n", attrJSON["dbtable"].ToString());
    serverScript.AppendFormat("<input type=\"hidden\" id=\"Form_DBTablePk\" name=\"Form_DBTablePk\" value=\"{0}\" />\r\n", attrJSON["dbtablepk"].ToString());
    serverScript.AppendFormat("<input type=\"hidden\" id=\"Form_DBTableTitle\" name=\"Form_DBTableTitle\" value=\"{0}\" />\r\n", attrJSON["dbtabletitle"].ToString());
    serverScript.AppendFormat("<input type=\"hidden\" id=\"Form_AutoSaveData\" name=\"Form_AutoSaveData\" value=\"{0}\" />\r\n", "1");
    serverScript.Append("<script type=\"text/javascript\">\r\n");
    serverScript.Append("\tvar initData = @Html.Raw(BWorkFlow.GetFormDataJsonString(initData));\r\n");
    serverScript.Append("\tvar fieldStatus = @Html.Raw(BWorkFlow.GetFieldStatus(FlowID, StepID));\r\n");
    serverScript.Append("\tvar displayModel = '@DisplayModel';\r\n");
    serverScript.Append("\t$(function (){\r\n");
    serverScript.AppendFormat("\t\tformrun.initData(initData, \"{0}\", fieldStatus, displayModel);\r\n", attrJSON["dbtable"].ToString());
    serverScript.Append("\t});\r\n");
    serverScript.Append("</script>\r\n");
    

    string file = Server.MapPath("Forms/" + fileName);
    System.IO.Stream stream = System.IO.File.Open(file, FileMode.OpenOrCreate, FileAccess.Write, FileShare.None);
    stream.SetLength(0);
    StreamWriter sw = new StreamWriter(stream, System.Text.Encoding.UTF8);
    sw.Write(serverScript.ToString());
    sw.Write(Server.HtmlDecode(html));
    sw.Close();
    stream.Close();


    string attr = wff.Attribute;
    string appType = LitJson.JsonMapper.ToObject(attr)["apptype"].ToString();
    Business.Platform.AppLibrary App = new Business.Platform.AppLibrary();
    var app = App.GetByCode(id);
    bool isAdd=false;
    if(app==null)
    {
        app = new Data.Model.AppLibrary();
        app.ID = Guid.NewGuid();
        app.Code = id;
        isAdd=true;
    }
    app.Address = "/Platform/WorkFlow/FormDesigner/Forms/" + fileName;
    app.Note = "流程表单";
    app.OpenMode = 0;
    app.Params = "";
    app.Title = name.Trim();
    app.Type = appType.IsNullOrEmpty() ? "其它类别" : appType.Trim();
    if(isAdd)
    {
        App.Add(app);
    }
    else
    {
        App.Update(app);
    }

    Business.Platform.Log.Add("发布了流程表单", app.Serialize() + "内容：" + html, Business.Platform.Log.Types.流程相关);
    
    Response.Write("发布成功!");
    Response.End();
}